import java.util.*;

public class IntervalScheduleMaximization {
    private static Comparator<int[]> sortOnEndTime = new Comparator<int[]>() {
        @Override
        public int compare(int[] t1, int[] t2) {
            return Integer.compare(t1[1], t2[1]);
        }
    };
    public List<int[]> constructOptimalSchedule(int[][] intervals) {
        Arrays.sort(intervals, sortOnEndTime);
        List<int[]> result = new ArrayList<>();
        int[] prevInterval = intervals[0];
        result.add(prevInterval);
        for(int i=1; i<intervals.length; i++) {
            int[] currentInterval = intervals[i];
            if(currentInterval[0] >= prevInterval[1]) {
                result.add(currentInterval);
                prevInterval = currentInterval;
            }
        }

        return result;
    }

    public static void main(String[] args) {
        int[][] input = {{1,2}, {1,3}, {3,4}};
        IntervalScheduleMaximization obj = new IntervalScheduleMaximization();
        obj.constructOptimalSchedule(input);
    }
}
